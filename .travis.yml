---
language: python
dist: focal
python:
  - '3.8'

services:
  - docker

rvm:
  - 2.2

env:
  - ANSIBLE_VERSION=latest METADATA_TESTS=true
  - ANSIBLE_VERSION=2.8.0  KITCHEN_PLATFORM=default-ubuntu-1804
  - ANSIBLE_VERSION=2.8.14 KITCHEN_PLATFORM=default-ubuntu-1804
  - ANSIBLE_VERSION=2.9.0  KITCHEN_PLATFORM=default-ubuntu-1804
  - ANSIBLE_VERSION=2.9.11  KITCHEN_PLATFORM=default-ubuntu-1804
  - ANSIBLE_VERSION=2.10.0  KITCHEN_PLATFORM=default-ubuntu-1804
#  - ANSIBLE_VERSION=latest PROMETHEUS_LOCAL_ARCHIVE=true KITCHEN_PLATFORM=default-archlinux
  - ANSIBLE_VERSION=latest PROMETHEUS_LOCAL_ARCHIVE=true KITCHEN_PLATFORM=default-centos-81
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-77
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-81
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-oraclelinux-77
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-ubuntu-1604
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-ubuntu-1804
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-debian-10 KITCHEN_PLAYBOOK=tgroups KITCHEN_INSPEC_SUITE=tgroups
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-debian-10 KITCHEN_PLAYBOOK=tgroups_purge KITCHEN_INSPEC_SUITE=tgroups KITCHEN_IDEMPOTENY_TEST=false
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-debian-10 KITCHEN_PLAYBOOK=promcron KITCHEN_INSPEC_SUITE=promcron
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-77 KITCHEN_PLAYBOOK=promcron KITCHEN_INSPEC_SUITE=promcron
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-81 KITCHEN_PLAYBOOK=promcron KITCHEN_INSPEC_SUITE=promcron
#  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-archlinux KITCHEN_PLAYBOOK=promrun KITCHEN_INSPEC_SUITE=promrun
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-81 KITCHEN_PLAYBOOK=promrun KITCHEN_INSPEC_SUITE=promrun
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-77 KITCHEN_PLAYBOOK=promrun KITCHEN_INSPEC_SUITE=promrun
  - ANSIBLE_VERSION=latest KITCHEN_PLATFORM=default-centos-81 KITCHEN_PLAYBOOK=promrun KITCHEN_INSPEC_SUITE=promrun

before_install:
  # To pacify CentOS 8.x when running tasks that are delegated to localhost
  - sudo mkdir -p /usr/libexec
  - sudo ln -s /usr/bin/python /usr/libexec/platform-python

install:
  # Install gems
  - bundle install

  # Install and setup pipenv
  - pip install pipenv --upgrade-strategy=only-if-needed

  # Install software
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pipenv install ansible ; else pipenv install ansible==$ANSIBLE_VERSION; fi
  - pipenv install

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/?branch=master

script:
  # Validate README.md URLs
  - if [ "$METADATA_TESTS" == "true" ]; then awesome_bot --request-delay 5 --skip-save-results --allow-dupe --white-list=localhost --files $(ls *.md docs/*.md tests/*.md | paste -sd "," -) ; fi

  # Perform yaml lint checks
  - if [ "$METADATA_TESTS" == "true" ]; then yamllint --config-file=tests/yamllint.yml . ; fi

  # Ensure an inspec test exists for each software installation
  - if [ "$METADATA_TESTS" == "true" ]; then chmod +x tests/all_software_inspec_tested && ./tests/all_software_inspec_tested ; fi

  # Perform ansible-lint checks
  - if [ "$METADATA_TESTS" == "true" ]; then ansible-lint -x 204 tasks/* ; fi

  # Check playbook's syntax
  - if [ "$METADATA_TESTS" == "true" ]; then ansible-playbook -i tests/inventory tests/playbooks/install_all.yml --syntax-check ; fi

  # Check Ansible Galaxy lint
  - if [ "$METADATA_TESTS" == "true" ]; then git clone https://github.com/ansible/galaxy-lint-rules.git ; fi
  - if [ "$METADATA_TESTS" == "true" ]; then ansible-lint -x 204,305 -r galaxy-lint-rules/rules . ; fi

  # Display Ansible version
  - if [ "$METADATA_TESTS" != "true" ]; then ansible --version; fi

  # Create kitchen SSH keys to be used by kitchen-docker when
  # building Dockerfiles
  - if [ "$METADATA_TESTS" != "true" ]; then mkdir -m 0700 -p .kitchen ; fi
  - if [ "$METADATA_TESTS" != "true" ]; then if ! [ -f ".kitchen/docker_id_rsa" ] ; then ssh-keygen -f .kitchen/docker_id_rsa -t rsa -N ''; fi ; fi

  # Perform installations, inspec tests, and idempotent tests
  - if [ "$METADATA_TESTS" != "true" ]; then bundle exec kitchen test $KITCHEN_PLATFORM ; fi
